# Саватеев Михаил группа ИУ7-16Б
# Лабораторная работа номер 8, задание 1, вариант 3
# поиск наибольшего количества четных элементов
matrix = [] #инициализируем матрицу
print('Для ввода матрицы напишите через пробел значения строк, затем нажмите Enter. По окончании ввода строк нажмите '
      'Enter')
while True:
    line = [int(i) for i in input().split()] # ввод строки в матрицу
    if matrix == []:
        matrix.append(line) # Если матрица еще пустая то просто добавляем любую строку
    elif line == []: # если введена пустая строка то завершаем ввод матрицы
        print('Ввод матрицы завершен.')
        break
    elif len(matrix[0]) == len (line): # если длина строки равна длине первой строке, иначе выводим ошибку и просим
        # повторить ввод
        matrix.append(line)
    else:
        print(f'Ошибка. Длина строк в матрице должна совпадать, и должна быть равна {len(matrix[0])}.\nПовторите ввод!')
if len(matrix) == 0:
    print("Ошибка. Вы ввели пустую матрицу. Работа программы завершена с ошибкой!") # выводим ошибку что не совпадает
    # количестао элементов в строке с отальной матрицей
else:
    index_of_max = -1
    maxcnt = 0
    for index, line in enumerate(matrix): # перебираем строки в матрицу и запоминаем их индекс
        cnt = 0
        for el in line: # перебираем элементы в строке
            if el%2==0:
                cnt+=1 # если четное прибавляем счетчик
        if cnt > maxcnt: # если счетчик больше максимума то запоминаем индекс
            index_of_max = index
            maxcnt = cnt
if index_of_max == -1: # если ни одного подходящего элемента не было то выводим ошибку
    print("Не было введено строки, содержащей четные числа")
else:
    print(f'Наибольшее число четных элементов было в строке {index_of_max+1}: ',end='')
    print(*matrix[index_of_max])